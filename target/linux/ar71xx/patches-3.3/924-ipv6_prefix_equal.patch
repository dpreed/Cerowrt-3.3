diff --git a/include/net/ipv6.h b/include/net/ipv6.h
index 43603ee..ea8f61d 100644
--- a/include/net/ipv6.h
+++ b/include/net/ipv6.h
@@ -366,7 +366,7 @@ static inline int __ipv6_prefix_equal(const __be32 *a1, const __be32 *a2,
 
 	/* check incomplete u32 in prefix */
 	pbi = prefixlen & 0x1f;
-	if (pbi && ((a1[pdw] ^ a2[pdw]) & htonl((0xffffffff) << (32 - pbi))))
+	if (pbi && ((__get_unaligned_cpu32(&a1[pdw]) ^ __get_unaligned_cpu32(&a2[pdw])) & htonl((0xffffffff) << (32 - pbi))))
 		return 0;
 
 	return 1;
@@ -450,7 +450,7 @@ static inline int __ipv6_addr_diff(const void *token1, const void *token2, int a
 	addrlen >>= 2;
 
 	for (i = 0; i < addrlen; i++) {
-		__be32 xb = a1[i] ^ a2[i];
+		__be32 xb = __get_unaligned_cpu32(&a1[i]) ^ __get_unaligned_cpu32(&a2[i]);
 		if (xb)
 			return i * 32 + 31 - __fls(ntohl(xb));
 	}
diff --git a/net/ipv6/ip6_fib.c b/net/ipv6/ip6_fib.c
index b82bcde..9ce186a 100644
--- a/net/ipv6/ip6_fib.c
+++ b/net/ipv6/ip6_fib.c
@@ -141,7 +141,7 @@ static __inline__ __be32 addr_bit_set(const void *token, int fn_bit)
 	 * See include/asm-generic/bitops/le.h.
 	 */
 	return (__force __be32)(1 << ((~fn_bit ^ BITOP_BE32_SWIZZLE) & 0x1f)) &
-	       addr[fn_bit >> 5];
+	       __get_unaligned_cpu32(&addr[fn_bit >> 5]);
 }
 
 static __inline__ struct fib6_node * node_alloc(void)
